<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2023/03/27/Redis%E5%9C%A8SpringBoot%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/03/27/Redis%E5%9C%A8SpringBoot%E4%B8%AD%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>title: Redis在SpringBoot中的简单使用<br>date: 2023-03-027 20:30<br>categories: 数据库<br>tags:</p><ul><li>Redis</li></ul><h3 id="一、导入依赖"><a href="#一、导入依赖" class="headerlink" title="一、导入依赖"></a>一、导入依赖</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;dependency&gt;<br>    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.7</span><span class="hljs-number">.8</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><h3 id="二、后台代码"><a href="#二、后台代码" class="headerlink" title="二、后台代码"></a>二、后台代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/kind&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">KindController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> KindService kindService;<br><br>    <span class="hljs-meta">@Autowired</span><br>    RedisTemplate redisTemplate;<br><br>    <span class="hljs-keyword">static</span> <span class="hljs-type">String</span> <span class="hljs-variable">REDIS_KIND_LIST</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;kind_list&quot;</span>;<br>    <span class="hljs-meta">@GetMapping(&quot;/list&quot;)</span><br>    <span class="hljs-keyword">public</span> List&lt;Kind&gt; <span class="hljs-title function_">list</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-comment">//从Redis中获取分类数据</span><br><span class="hljs-comment">//        listOperations对集合进行操作</span><br>        <span class="hljs-type">ListOperations</span> <span class="hljs-variable">listOperations</span> <span class="hljs-operator">=</span> redisTemplate.opsForList();<br>        <span class="hljs-type">Long</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> listOperations.size(REDIS_KIND_LIST);<br>        <span class="hljs-keyword">if</span> (size != <span class="hljs-literal">null</span> &amp;&amp; size &gt; <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-comment">//如果Redis中存在分类数据，直接返回Redis中分类数据</span><br>            <span class="hljs-type">List</span> <span class="hljs-variable">list</span> <span class="hljs-operator">=</span> listOperations.range(REDIS_KIND_LIST, <span class="hljs-number">0</span>, size - <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">return</span> list;<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">//如果Redis中不存在分类数据，从数据库中取出分类数据</span><br>            List&lt;Kind&gt; list = kindService.list();<br>            <span class="hljs-comment">//将分类数据存储在Redis中，并返回</span><br>            listOperations.rightPushAll(REDIS_KIND_LIST,list);<br>            <span class="hljs-keyword">return</span> list;<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/yunfreehh/picee/master/bolg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-03-27%20192125.png" alt="image"></p><h3 id="三、序列化问题导致显示非中文"><a href="#三、序列化问题导致显示非中文" class="headerlink" title="三、序列化问题导致显示非中文"></a>三、序列化问题导致显示非中文</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> org.yunfree.toutiao202302.config;<br><br><br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.core.RedisTemplate;<br><span class="hljs-keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;<br><span class="hljs-keyword">import</span> org.yunfree.toutiao202302.modle.Kind;<br><br><span class="hljs-keyword">import</span> java.net.UnknownHostException;<br><br><span class="hljs-keyword">import</span> java.awt.print.Book;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RedisConfig</span>  &#123;<br><br>   <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> RedisTemplate&lt;String, Kind&gt; <span class="hljs-title function_">redisTemplate</span><span class="hljs-params">(RedisConnectionFactory redisConnectionFactory)</span> <span class="hljs-keyword">throws</span> UnknownHostException &#123;<br>        RedisTemplate&lt;String, Kind&gt; template = <span class="hljs-keyword">new</span> <span class="hljs-title class_">RedisTemplate</span>();<br>        template.setConnectionFactory(redisConnectionFactory);<br>        <span class="hljs-type">Jackson2JsonRedisSerializer</span> <span class="hljs-variable">jackson2JsonRedisSerializer</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Jackson2JsonRedisSerializer</span>(Kind.class);<br>        template.setDefaultSerializer(jackson2JsonRedisSerializer);<br>        <span class="hljs-keyword">return</span> template;<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/yunfreehh/picee/master/bolg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-03-27%20194909.png" alt="image"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>基于vant3组件的文件上传</title>
    <link href="/2023/03/20/%E5%9F%BA%E4%BA%8Evant3%E7%BB%84%E4%BB%B6%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2023/03/20/%E5%9F%BA%E4%BA%8Evant3%E7%BB%84%E4%BB%B6%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="基于vant3组件的文件上传"><a href="#基于vant3组件的文件上传" class="headerlink" title="基于vant3组件的文件上传"></a>基于vant3组件的文件上传</h3><ol><li><h4 id="前台代码"><a href="#前台代码" class="headerlink" title="前台代码"></a>前台代码</h4></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;van-form @submit=&quot;onSubmit&quot; class=&quot;form1&quot;&gt;<br>    &lt;van-cell-group inset&gt;<br>        &lt;van-popup v-model:show=&quot;showPicker&quot; position=&quot;bottom&quot;&gt;<br>            &lt;van-picker<br>                        :columns=&quot;columns&quot;<br>                        @confirm=&quot;onConfirm&quot;<br>                        @cancel=&quot;showPicker = false&quot;<br>                        :columns-field-names=&quot;customFieldName&quot;<br>                        /&gt;<br>        &lt;/van-popup&gt;<br>        &lt;van-field name=&quot;uploader&quot; label=&quot;图片&quot;&gt;<br>            &lt;template #input&gt;<br>               &lt;van-uploader v-model=&quot;fileList&quot;/&gt;<br>            &lt;/template&gt;<br>        &lt;/van-field&gt;<br>&lt;/van-cell-group&gt;<br>        <br>&lt;script&gt;<br>const onSubmit = (values) =&gt; &#123;<br> <br>  let form = document.querySelector(&quot;.form1&quot;);<br>  let formData = new FormData(form);<br>  let upload = fileList.value[0]<br>  if (upload == undefined) &#123;<br>    Toast(&quot;您未上传图片，请上传图片！&quot;)<br>    return<br>  &#125;<br>  formData.append(&quot;file&quot;, upload.file);<br>  addArticle(formData).then(res =&gt; &#123;<br>     if (res == &quot;1&quot;) &#123;<br>        Toast(&quot;添加成功！&quot;)<br>        router.push(&quot;/mine&quot;)<br>     &#125; else &#123;<br>      Toast(&quot;添加失败，请重写头条信息！&quot;)<br>     &#125;<br>   &#125;)<br>  &#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/yunfreehh/picee/master/bolg/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-03-20%20213235.png" alt="image"></p><h4 id="2-后台逻辑"><a href="#2-后台逻辑" class="headerlink" title="2.后台逻辑"></a>2.后台逻辑</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@PostMapping(&quot;/add&quot;)</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">add</span><span class="hljs-params">(Article article, MultipartFile file)</span> &#123;<br>        <span class="hljs-keyword">if</span> (file == <span class="hljs-literal">null</span> || file.isEmpty()) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-comment">//将上传的文件重命名</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">filename</span> <span class="hljs-operator">=</span> file.getOriginalFilename();<br>        <span class="hljs-type">String</span> <span class="hljs-variable">newName</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replaceAll(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>) + filename.substring(filename.lastIndexOf(<span class="hljs-string">&quot;.&quot;</span>));<br>        <span class="hljs-comment">//文件上传到uploadPath</span><br>        <span class="hljs-keyword">try</span> &#123;<br>            file.transferTo(<span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-built_in">this</span>.uploadPath + newName));<br>        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        article.setPictures(newName);<br>        article.setType(<span class="hljs-number">1</span>);<br>        <span class="hljs-type">SimpleDateFormat</span> <span class="hljs-variable">dateFormat</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SimpleDateFormat</span>(<span class="hljs-string">&quot;yyy-MM-dd hh:mm:ss&quot;</span>);<br>        article.setTime(dateFormat.format(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()));<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> articleService.save(article);<br>        <span class="hljs-keyword">if</span> (result) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>vant3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>点击实现文件的下载</title>
    <link href="/2023/03/18/%E7%82%B9%E5%87%BB%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/"/>
    <url>/2023/03/18/%E7%82%B9%E5%87%BB%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8B%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<h3 id="点击实现文件的下载"><a href="#点击实现文件的下载" class="headerlink" title="点击实现文件的下载"></a>点击实现文件的下载</h3><h4 id="前臺代碼"><a href="#前臺代碼" class="headerlink" title="前臺代碼"></a>前臺代碼</h4><p><img src="https://raw.githubusercontent.com/yunfreehh/picee/master/bolg/2023-03-18%20123554.png" alt="image"></p><h5 id="前端頁面資源展示"><a href="#前端頁面資源展示" class="headerlink" title="前端頁面資源展示"></a>前端頁面資源展示</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;pictures&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;toutiao.type == 1&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;picIp + toutiao.pictures&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;video&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;toutiao.type == 3&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">:src</span>=<span class="hljs-string">&quot;picIp + toutiao.video&quot;</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">autoplay</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;download&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">van-icon</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;down&quot;</span>/&gt;</span><br>        下载<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br></code></pre></td></tr></table></figure><h5 id="邏輯實現"><a href="#邏輯實現" class="headerlink" title="邏輯實現"></a>邏輯實現</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script&gt;<br>const download = () =&gt; &#123;<br>  let filename = &quot;&quot;;<br>  if (toutiao.value.type == 1)&#123;<br>    filename = toutiao.value.pictures;<br>  &#125;else &#123;<br>    filename = toutiao.value.video;<br>  &#125;<br>  downloadFile(filename).then((res)=&gt;&#123;<br>    //创建一个URL<br>    let url = window.URL.createObjectURL(new Blob([res]))<br>    // 创建一个a标签<br>    let link = document.createElement(&quot;a&quot;)<br>    // a标签不需要在页面显示<br>    link.style.display = &quot;none&quot;;<br>    // a标签他的href设置为url<br>    link.href = url;<br>    link.setAttribute(&quot;download&quot;,filename)<br>    // 将a标签放入页面<br>    document.body.appendChild(link)<br>    //模拟点击a标签的行为<br>    link.click();<br>    //将url和link所占用的资源释放<br>    window.URL.revokeObjectURL(url)<br>    document.body.removeChild(link)<br>    Toast(&quot;下载成功!&quot;)<br>  &#125;);<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></figure><h5 id="https-js設置請求類型"><a href="#https-js設置請求類型" class="headerlink" title="https.js設置請求類型"></a>https.js設置請求類型</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> http = &#123;    <br><span class="hljs-title function_">getF</span>(<span class="hljs-params">url, params</span>) &#123;<br>        <span class="hljs-keyword">const</span> config = &#123;<br>            <span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;get&#x27;</span>,<br>            <span class="hljs-attr">url</span>: url,<br>            <span class="hljs-attr">responseType</span>: <span class="hljs-string">&#x27;blob&#x27;</span><br>        &#125; <span class="hljs-comment">/*这里如果GET请求有参数，则携带上传入的参数，在</span><br><span class="hljs-comment">        URL中以？的方式放在请求链接中*/</span><br>        <span class="hljs-keyword">if</span> (params) config.<span class="hljs-property">params</span> = params<br>        <span class="hljs-keyword">return</span> <span class="hljs-title function_">request</span>(config)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="api-js請求設置"><a href="#api-js請求設置" class="headerlink" title="api.js請求設置"></a>api.js請求設置</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//下载媒体资源</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">downloadFile</span>(<span class="hljs-params">filename</span>)&#123;<br>    <span class="hljs-keyword">return</span> http.<span class="hljs-title function_">getF</span>(<span class="hljs-string">&quot;article/download?filename=&quot;</span>+filename)<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h4><h5 id="Controller接受请求"><a href="#Controller接受请求" class="headerlink" title="Controller接受请求"></a>Controller接受请求</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//从配置文件从读取存储地址</span><br><span class="hljs-meta">@Value(&quot;$&#123;upload.path&#125;&quot;)</span><br><span class="hljs-keyword">private</span> String uploadPath;<br><span class="hljs-meta">@GetMapping(&quot;/download&quot;)</span><br><span class="hljs-type">byte</span>[] download(String filename)&#123;<br>    <span class="hljs-type">File</span> <span class="hljs-variable">file</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">File</span>(<span class="hljs-built_in">this</span>.uploadPath + filename);<br>    <span class="hljs-type">HttpHeaders</span> <span class="hljs-variable">headers</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">HttpHeaders</span>();<br><br>    <span class="hljs-comment">//        设置响应为字节流</span><br>    headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-keyword">return</span> FileUtils.readFileToByteArray(file);<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        e.printStackTrace();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="流处理依赖"><a href="#流处理依赖" class="headerlink" title="流处理依赖"></a>流处理依赖</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;!--流工具包,将file文件返回为流--&gt;<br>&lt;dependency&gt;<br>    &lt;groupId&gt;commons-io&lt;/groupId&gt;<br>    &lt;artifactId&gt;commons-io&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">2.6</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SpringBoot_school</title>
    <link href="/2023/03/13/SpringBoot_school/"/>
    <url>/2023/03/13/SpringBoot_school/</url>
    
    <content type="html"><![CDATA[<h3 id="建立基本的SpringBoot项目"><a href="#建立基本的SpringBoot项目" class="headerlink" title="建立基本的SpringBoot项目"></a>建立基本的SpringBoot项目</h3><ol><li><p>创建一个maven项目，在pom文件继承<parent></parent>依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;parent&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">2.7</span><span class="hljs-number">.8</span>&lt;/version&gt;<br>&lt;/parent&gt;<br></code></pre></td></tr></table></figure></li><li><p>在pom中添加SpringBoot依赖</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs java">&lt;dependencies&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;<br>        &lt;artifactId&gt;lombok&lt;/artifactId&gt;<br>        &lt;optional&gt;<span class="hljs-literal">true</span>&lt;/optional&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;!--        实现Spring项目的热部署--&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;<br>        &lt;optional&gt;<span class="hljs-literal">true</span>&lt;/optional&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;!--数据校验依赖--&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;<br>        &lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;!--spring-boot和mybatis-plus整合的jar--&gt;<br>    &lt;dependency&gt;<br>        &lt;groupId&gt;com.baomidou&lt;/groupId&gt;<br>        &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;<br>        &lt;version&gt;<span class="hljs-number">3.5</span><span class="hljs-number">.3</span>&lt;/version&gt;<br>    &lt;/dependency&gt;<br>   <br>    &lt;dependency&gt;<br>        &lt;groupId&gt;com.mysql&lt;/groupId&gt;<br>        &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;<br>        &lt;scope&gt;runtime&lt;/scope&gt;<br>    &lt;/dependency&gt;<br>   <br>&lt;/dependencies&gt;<br></code></pre></td></tr></table></figure></li><li><p>新建SpringBootApplication.java运行类，添加@SpringBootApplication注解</p></li></ol><h3 id="SpringBoot全局配置文件"><a href="#SpringBoot全局配置文件" class="headerlink" title="SpringBoot全局配置文件"></a>SpringBoot全局配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">application.properties</span><br><span class="hljs-comment">#配置tomcat端口号</span><br><span class="hljs-string">server.port=8080</span><br><span class="hljs-comment">#server项目访问路径</span><br><span class="hljs-attr">server.servlet.context-path:</span> <span class="hljs-string">/toutiao2023</span><br><br><span class="hljs-string">application.yml</span><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8899</span><br>  <span class="hljs-attr">servlet:</span><br>    <span class="hljs-attr">context-path:</span> <span class="hljs-string">/toutiao2023</span><br></code></pre></td></tr></table></figure><h3 id="SpringBoot自定义配置"><a href="#SpringBoot自定义配置" class="headerlink" title="SpringBoot自定义配置"></a>SpringBoot自定义配置</h3><p>1、在SpringBoot工程中，使用@ConfigurationProperties注入基本属性url、username、password、email、数组属性userList、Map属性pass，通过validation对email属性的值进行验证；</p><p>2、使用@Value注入属性uploadPath，使用SpEL表达式注入属性值；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-comment">//@Component代表是Spring容器中的bean对象</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;prop&quot;)</span><br><span class="hljs-comment">//@ConfigurationProperties代表将配置文件当中的属性注入到类的属性当中</span><br><span class="hljs-comment">//prefix = “prop” 表示以prop为前缀的属性</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Validated</span><br><span class="hljs-comment">//@Validated表示要对属性进行校验</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Prop</span> &#123;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-keyword">private</span> String users[];<br>    <span class="hljs-keyword">private</span> Map passes;<br>    <span class="hljs-meta">@Email(message = &quot;邮箱格式错误!&quot;)</span><br><span class="hljs-comment">//    @Email  表示该属性必须遵守email正确的格式，message表示错误格式</span><br>    <span class="hljs-keyword">private</span> String email;<br>    <span class="hljs-meta">@Value(&quot;$&#123;upload.path&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String uploadPath;<br>    <span class="hljs-meta">@Value(&quot;#&#123;5*6&#125;&quot;)</span><br>    <span class="hljs-keyword">private</span> String result;<br>&#125;<br><br>application.yml<br>prop:<br>  userName: jerry<br>  pass_word: <span class="hljs-number">123456</span><br>  users: [tom,jack,tough]<br>  passes: &#123;tom: <span class="hljs-number">123</span>,jack: <span class="hljs-number">456</span>,tough: <span class="hljs-number">789</span>&#125;<br>  email: yunfree163@<span class="hljs-number">163.</span>com<br>upload:<br>  path: E:\ServiceFile\<br></code></pre></td></tr></table></figure><p>3、在SpringBoot工程中，使用@PropertySource读取自定义配置文件属性</p><p>4、使用@Configuration编写自定义配置类；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-comment">//@Configuration 和component一样不过标记为配置类</span><br><span class="hljs-meta">@PropertySource(&quot;classpath:test.properties&quot;)</span><br><span class="hljs-comment">//@PropertySource 表示读取自定义的配置文件</span><br><span class="hljs-meta">@ConfigurationProperties(prefix = &quot;info&quot;)</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MyProp</span> &#123;<br>    <span class="hljs-keyword">private</span> String user;<br>    <span class="hljs-keyword">private</span> String pass;<br>&#125;<br><br>test.properties<br>info.user = monica<br>info.pass = <span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure><h3 id="SpringBoot多环境配置"><a href="#SpringBoot多环境配置" class="headerlink" title="SpringBoot多环境配置"></a>SpringBoot多环境配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-number">1</span><span class="hljs-string">、在SpringBoot工程中，进行多环境配置，在多个配置文件中使用不同的端口号；</span><br><span class="hljs-number">2</span><span class="hljs-string">、在全局配置文件中激活对应的配置文件，</span><br><span class="hljs-string">源代码：</span><br><span class="hljs-string">application.properties</span><br><span class="hljs-string">spring.profiles.active=test</span><br><br><span class="hljs-string">application-test.properties</span><br><span class="hljs-comment">#测试环境</span><br><span class="hljs-string">server.port=8888</span><br><br><span class="hljs-string">application-prod.properties</span><br><span class="hljs-comment">#生产环境</span><br><span class="hljs-string">server.port=9999</span><br></code></pre></td></tr></table></figure><h3 id="SpringBoot存储静态文件在本机配置"><a href="#SpringBoot存储静态文件在本机配置" class="headerlink" title="SpringBoot存储静态文件在本机配置"></a>SpringBoot存储静态文件在本机配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">upload:</span><br> <span class="hljs-attr">path:</span> <span class="hljs-string">E:\ServiceFile\</span><br> <span class="hljs-attr">oldPath:</span> <span class="hljs-string">C:\Users\yunfree\Pictures\toutiao\uploadFile</span><br><br><br><span class="hljs-attr">mvc:</span><br>   <span class="hljs-attr">static-path-pattern:</span> <span class="hljs-string">/pic/**</span><br> <span class="hljs-attr">web:</span><br>   <span class="hljs-attr">resources:</span><br>     <span class="hljs-attr">static-locations:</span> <span class="hljs-string">file$&#123;oldPath&#125;</span><br>     <br>     <br><br></code></pre></td></tr></table></figure><h3 id="Mybatis-plus自动生成代码"><a href="#Mybatis-plus自动生成代码" class="headerlink" title="Mybatis-plus自动生成代码"></a>Mybatis-plus自动生成代码</h3><h4 id="Mybatis-plus代码生成器-生成Controller、Service、Mapper、Model代码；"><a href="#Mybatis-plus代码生成器-生成Controller、Service、Mapper、Model代码；" class="headerlink" title="Mybatis-plus代码生成器,生成Controller、Service、Mapper、Model代码；"></a>Mybatis-plus代码生成器,生成Controller、Service、Mapper、Model代码；</h4><p>依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br>        <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity-engine-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>生成配置启动代码</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs x86asm"><span class="hljs-meta">public</span> class UserGenerator &#123;<br>    <span class="hljs-meta">public</span> static void main(String[] args) &#123;<br>        List&lt;String&gt; tables = new ArrayList&lt;&gt;()<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;user&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;chatmsg&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;comment&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;kind&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;article&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;picture&quot;</span>)<span class="hljs-comment">;</span><br>        tables<span class="hljs-number">.</span><span class="hljs-keyword">add</span>(<span class="hljs-string">&quot;log&quot;</span>)<span class="hljs-comment">;</span><br><br>        FastAutoGenerator<span class="hljs-number">.</span>create(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/toutiaodb&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<br>                        <span class="hljs-string">&quot;123456&quot;</span>)<br><span class="hljs-meta">                .globalConfig</span>(builder -&gt; &#123;<br>                    builder<span class="hljs-number">.</span>author(<span class="hljs-string">&quot;yunfree&quot;</span>)               //作者<br><span class="hljs-meta">                            .outputDir</span>(System<span class="hljs-number">.</span>getProperty(<span class="hljs-string">&quot;user.dir&quot;</span>)+<span class="hljs-string">&quot;\\src\\main\\java&quot;</span>)    //输出路径(写到java目录)<br>                            //.enableSwagger()           //开启swagger<br><span class="hljs-meta">                            .commentDate</span>(<span class="hljs-string">&quot;yyyy-MM-dd&quot;</span>)<br><span class="hljs-meta">                            .fileOverride</span>()<span class="hljs-comment">;            //开启覆盖之前生成的文件</span><br><br>                &#125;)<br><span class="hljs-meta">                .packageConfig</span>(builder -&gt; &#123;<br>                    builder<span class="hljs-number">.</span>parent(<span class="hljs-string">&quot;org.yunfree&quot;</span>)<br><span class="hljs-meta">                            .moduleName</span>(<span class="hljs-string">&quot;toutiao2023021&quot;</span>)<br><span class="hljs-meta">                            .entity</span>(<span class="hljs-string">&quot;model&quot;</span>)<br><span class="hljs-meta">                            .service</span>(<span class="hljs-string">&quot;service&quot;</span>)<br><span class="hljs-meta">                            .serviceImpl</span>(<span class="hljs-string">&quot;serviceImpl&quot;</span>)<br><span class="hljs-meta">                            .controller</span>(<span class="hljs-string">&quot;controller&quot;</span>)<br><span class="hljs-meta">                            .mapper</span>(<span class="hljs-string">&quot;mapper&quot;</span>)<br><span class="hljs-meta">                            .xml</span>(<span class="hljs-string">&quot;mapper&quot;</span>)<br><span class="hljs-meta">                            .pathInfo</span>(Collections<span class="hljs-number">.</span>singletonMap(OutputFile<span class="hljs-number">.</span>xml,System<span class="hljs-number">.</span>getProperty(<span class="hljs-string">&quot;user.dir&quot;</span>)+<span class="hljs-string">&quot;\\src\\main\\resources\\mapper&quot;</span>))<span class="hljs-comment">;</span><br>                &#125;)<br><span class="hljs-meta">                .strategyConfig</span>(builder -&gt; &#123;<br>                    builder<span class="hljs-number">.</span>addInclude(tables)<br><span class="hljs-meta">                            .addTablePrefix</span>(<span class="hljs-string">&quot;p_&quot;</span>)<br><span class="hljs-meta">                            .serviceBuilder</span>()<br><span class="hljs-meta">                            .formatServiceFileName</span>(<span class="hljs-string">&quot;%sService&quot;</span>)<br><span class="hljs-meta">                            .formatServiceImplFileName</span>(<span class="hljs-string">&quot;%sServiceImpl&quot;</span>)<br><span class="hljs-meta">                            .entityBuilder</span>()<br><span class="hljs-meta">                            .enableLombok</span>()<br><span class="hljs-meta">                            .logicDeleteColumnName</span>(<span class="hljs-string">&quot;deleted&quot;</span>)<br><span class="hljs-meta">                            .enableTableFieldAnnotation</span>()<br><span class="hljs-meta">                            .controllerBuilder</span>()<br><span class="hljs-meta">                            .formatFileName</span>(<span class="hljs-string">&quot;%sController&quot;</span>)<br><span class="hljs-meta">                            .enableRestStyle</span>()<br><span class="hljs-meta">                            .mapperBuilder</span>()<br><span class="hljs-meta">                            .enableBaseResultMap</span>()  //生成通用的resultMap<br><span class="hljs-meta">                            .superClass</span>(BaseMapper<span class="hljs-number">.</span>class)<br><span class="hljs-meta">                            .formatMapperFileName</span>(<span class="hljs-string">&quot;%sMapper&quot;</span>)<br><span class="hljs-meta">                            .enableMapperAnnotation</span>()<br><span class="hljs-meta">                            .formatXmlFileName</span>(<span class="hljs-string">&quot;%sMapper&quot;</span>)<span class="hljs-comment">;</span><br>                &#125;)<br>                //.templateEngine(new FreemarkerTemplateEngine()) // 使用Freemarker引擎模板，默认的是Velocity引擎模板<br><span class="hljs-meta">                .execute</span>()<span class="hljs-comment">;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="MyBatisX插件生成-Service、Mapper、Model代码；"><a href="#MyBatisX插件生成-Service、Mapper、Model代码；" class="headerlink" title="MyBatisX插件生成  Service、Mapper、Model代码；"></a>MyBatisX插件生成  Service、Mapper、Model代码；</h4><ol><li><p>在idea中连接数据库</p><p><img src="https://raw.githubusercontent.com/yunfreehhh/picee/master/bolg/QQ%E6%88%AA%E5%9B%BE20230313201427.png" alt="image"></p></li><li><p>选中需要生成的数据库表，右键生成</p><p><img src="https://raw.githubusercontent.com/yunfreehhh/picee/master/bolg/QQ%E6%88%AA%E5%9B%BE20230313201607.png" alt="image"></p></li><li><p>修改相应配置点击生成</p><p><img src="https://raw.githubusercontent.com/yunfreehhh/picee/master/bolg/QQ%E6%88%AA%E5%9B%BE20230313201549.png" alt="image"></p></li></ol><h3 id="SpringBoot配置德鲁伊druid连接池"><a href="#SpringBoot配置德鲁伊druid连接池" class="headerlink" title="SpringBoot配置德鲁伊druid连接池"></a>SpringBoot配置德鲁伊druid连接池</h3><p>配置信息</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/toutiaodb</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">com.alibaba.druid.pool.DruidDataSource</span><br>    <span class="hljs-attr">druid:</span><br>      <span class="hljs-attr">initial-size:</span> <span class="hljs-number">5</span><br>      <span class="hljs-attr">min-idle:</span> <span class="hljs-number">5</span><br>      <span class="hljs-attr">max-wait:</span> <span class="hljs-number">30000</span><br>      <span class="hljs-attr">max-active:</span> <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure><p>依赖信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Java">&lt;dependency&gt;<br>    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;<br>    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;<br>    &lt;version&gt;<span class="hljs-number">1.1</span><span class="hljs-number">.23</span>&lt;/version&gt;<br>&lt;/dependency&gt;<br></code></pre></td></tr></table></figure><h3 id="Mybatis-plus分页配置"><a href="#Mybatis-plus分页配置" class="headerlink" title="Mybatis-plus分页配置"></a>Mybatis-plus分页配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@MapperScan(&quot;org.yunfree.toutiao202302.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybatisPlusConfig</span> &#123;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 新的分页插件,一缓和二缓遵循mybatis的规则,需要设置 MybatisConfiguration#useDeprecatedExecutor = false 避免缓存出现问题(该属性会在旧插件移除后一同移除)</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">mybatisPlusInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>(DbType.H2));<br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br><br><span class="hljs-comment">//    @Bean</span><br><span class="hljs-comment">//    public ConfigurationCustomizer configurationCustomizer() &#123;</span><br><span class="hljs-comment">//        return configuration -&gt; configuration.setUseDeprecatedExecutor(false);</span><br><span class="hljs-comment">//    &#125;</span><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="SpringBoot全局跨域"><a href="#SpringBoot全局跨域" class="headerlink" title="SpringBoot全局跨域"></a>SpringBoot全局跨域</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//全局跨域</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CorsConfig</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">WebMvcConfigurer</span> &#123;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">addCorsMappings</span><span class="hljs-params">(CorsRegistry registry)</span> &#123;<br>        registry.addMapping(<span class="hljs-string">&quot;/**&quot;</span>)<br>                <span class="hljs-comment">//是否发送Cookie</span><br>                .allowCredentials(<span class="hljs-literal">true</span>)<br>                <span class="hljs-comment">//放行哪些原始域</span><br>                .allowedOriginPatterns(<span class="hljs-string">&quot;*&quot;</span>)<br>                .allowedMethods(<span class="hljs-keyword">new</span> <span class="hljs-title class_">String</span>[]&#123;<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;POST&quot;</span>, <span class="hljs-string">&quot;PUT&quot;</span>, <span class="hljs-string">&quot;DELETE&quot;</span>&#125;)<br>                .allowedHeaders(<span class="hljs-string">&quot;*&quot;</span>)<br>                .exposedHeaders(<span class="hljs-string">&quot;*&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>2023-3-13</p><hr>]]></content>
    
    
    <categories>
      
      <category>SpringBoot</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SpringBoot德鲁伊连接池的配置</tag>
      
      <tag>SpringBoot自定义配置</tag>
      
      <tag>SpringBoot全局跨域</tag>
      
      <tag>Mybatis-plus自动生成代码</tag>
      
      <tag>Mybatis-plus分页配置</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>my first blog</title>
    <link href="/2023/03/11/my-first-blog/"/>
    <url>/2023/03/11/my-first-blog/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/11/hello-world/"/>
    <url>/2023/03/11/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>模拟堆</title>
    <link href="/2021/08/03/%E6%A8%A1%E6%8B%9F%E5%A0%86/"/>
    <url>/2021/08/03/%E6%A8%A1%E6%8B%9F%E5%A0%86/</url>
    
    <content type="html"><![CDATA[<p>维护一个集合，初始时集合为空，支持如下几种操作：</p><ol><li><code>I x</code>，插入一个数 xx；</li><li><code>PM</code>，输出当前集合中的最小值；</li><li><code>DM</code>，删除当前集合中的最小值（数据保证此时的最小值唯一）；</li><li><code>D k</code>，删除第 kk 个插入的数；</li><li><code>C k x</code>，修改第 kk 个插入的数，将其变为 xx；</li></ol><p>现在要进行 NN 次操作，对于所有第 22 个操作，输出当前集合的最小值。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 NN。</p><p>接下来 NN 行，每行包含一个操作指令，操作指令为 <code>I x</code>，<code>PM</code>，<code>DM</code>，<code>D k</code> 或 <code>C k x</code> 中的一种。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>对于每个输出指令 <code>PM</code>，输出一个结果，表示当前集合中的最小值。</p><p>每个结果占一行。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>1≤N≤1051≤N≤105<br>−109≤x≤109−109≤x≤109<br>数据保证合法。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">8</span><br><span class="hljs-attribute">I</span> -<span class="hljs-number">10</span><br><span class="hljs-attribute">PM</span><br><span class="hljs-attribute">I</span> -<span class="hljs-number">10</span><br><span class="hljs-attribute">D</span> <span class="hljs-number">1</span><br><span class="hljs-attribute">C</span> <span class="hljs-number">2</span> <span class="hljs-number">8</span><br><span class="hljs-attribute">I</span> <span class="hljs-number">6</span><br><span class="hljs-attribute">PM</span><br><span class="hljs-attribute">DM</span><br></code></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-10</span><br>6<br></code></pre></td></tr></table></figure><p><img src="https://cdn.acwing.com/media/article/image/2021/08/03/101228_3ca242ccf4-%E6%89%8B%E5%86%99%E5%A0%861.png"></p><p><img src="https://cdn.acwing.com/media/article/image/2021/08/03/101228_531db5d6f4-%E6%89%8B%E5%86%99%E5%A0%862.png"></p><p><img src="https://cdn.acwing.com/media/article/image/2021/08/03/101228_5752f39ff4-%E6%89%8B%E5%86%99%E5%A0%863.png"></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs c++">&#123;<br>    std::ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    std::cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br><br>    <span class="hljs-type">int</span> n,m=<span class="hljs-number">0</span>;<span class="hljs-comment">//n次操作，m第几次插入计数用</span><br>    cin&gt;&gt;n;<br><br>    <span class="hljs-keyword">while</span>(n --)<br>    &#123;   <br>        <span class="hljs-type">int</span> k,c;<span class="hljs-comment">//c加入的数字，k第几个；</span><br>        string op;<br>        cin&gt;&gt;op;<br>        <span class="hljs-keyword">if</span>(op == <span class="hljs-string">&quot;I&quot;</span>)<br>        &#123;   <br><br>            cin&gt;&gt;c;<br>            m++,cnt++;<br>            ph[m] = cnt;<br>            hp[cnt] = m;<br>            h[cnt] = c;<br>            <span class="hljs-built_in">up</span>(cnt);<span class="hljs-comment">//插到最后一个，所以浮</span><br><br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(op == <span class="hljs-string">&quot;PM&quot;</span>)<br>        &#123;<span class="hljs-comment">//输出最小值</span><br>            cout&lt;&lt;h[<span class="hljs-number">1</span>]&lt;&lt;endl;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(op == <span class="hljs-string">&quot;DM&quot;</span>)<br>        &#123;<span class="hljs-comment">//删除最小值，将堆最后覆盖最小值，cnt--，down</span><br>            <span class="hljs-built_in">head_swap</span>(cnt,<span class="hljs-number">1</span>);<br>            cnt--;<br>            <span class="hljs-built_in">down</span>(<span class="hljs-number">1</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(op == <span class="hljs-string">&quot;D&quot;</span>)<br>        &#123;<span class="hljs-comment">//删除第k个插入的</span><br>            cin&gt;&gt;k;<br>            k = ph[k];<br>            <span class="hljs-built_in">head_swap</span>(k,cnt);<br>            cnt--;<br>            <span class="hljs-built_in">up</span>(k); <span class="hljs-built_in">down</span>(k);<br>        &#125;<span class="hljs-keyword">else</span><br>        &#123;<span class="hljs-comment">//修改第k个插入的</span><br>            cin&gt;&gt;k&gt;&gt;c;<br>            k = ph[k];<br>            h[k] = c;<br>            <span class="hljs-built_in">up</span>(k); <span class="hljs-built_in">down</span>(k); <br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据结构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>堆</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
